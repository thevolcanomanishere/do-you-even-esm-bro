// Generated by @wagmi/cli@0.1.14 on 31/3/2023 at 20:54:49
import {
  getContract,
  GetContractArgs,
  readContract,
  ReadContractConfig,
  writeContract,
  WriteContractMode,
  WriteContractArgs,
  WriteContractPreparedArgs,
  WriteContractUnpreparedArgs,
  prepareWriteContract,
  PrepareWriteContractConfig,
  watchContractEvent,
  WatchContractEventConfig,
  WatchContractEventCallback,
} from "wagmi/actions";

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReserveAuctionFindersEth
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export const reserveAuctionFindersEthABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      {
        name: "_erc721TransferHelper",
        internalType: "address",
        type: "address",
      },
      { name: "_royaltyEngine", internalType: "address", type: "address" },
      {
        name: "_protocolFeeSettings",
        internalType: "address",
        type: "address",
      },
      { name: "_weth", internalType: "address", type: "address" },
    ],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenContract",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      { name: "firstBid", internalType: "bool", type: "bool", indexed: false },
      { name: "extended", internalType: "bool", type: "bool", indexed: false },
      {
        name: "auction",
        internalType: "struct ReserveAuctionFindersEth.Auction",
        type: "tuple",
        components: [
          { name: "seller", internalType: "address", type: "address" },
          { name: "reservePrice", internalType: "uint96", type: "uint96" },
          {
            name: "sellerFundsRecipient",
            internalType: "address",
            type: "address",
          },
          { name: "highestBid", internalType: "uint96", type: "uint96" },
          { name: "highestBidder", internalType: "address", type: "address" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "startTime", internalType: "uint48", type: "uint48" },
          { name: "finder", internalType: "address", type: "address" },
          { name: "firstBidTime", internalType: "uint80", type: "uint80" },
          { name: "findersFeeBps", internalType: "uint16", type: "uint16" },
        ],
        indexed: false,
      },
    ],
    name: "AuctionBid",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenContract",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "auction",
        internalType: "struct ReserveAuctionFindersEth.Auction",
        type: "tuple",
        components: [
          { name: "seller", internalType: "address", type: "address" },
          { name: "reservePrice", internalType: "uint96", type: "uint96" },
          {
            name: "sellerFundsRecipient",
            internalType: "address",
            type: "address",
          },
          { name: "highestBid", internalType: "uint96", type: "uint96" },
          { name: "highestBidder", internalType: "address", type: "address" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "startTime", internalType: "uint48", type: "uint48" },
          { name: "finder", internalType: "address", type: "address" },
          { name: "firstBidTime", internalType: "uint80", type: "uint80" },
          { name: "findersFeeBps", internalType: "uint16", type: "uint16" },
        ],
        indexed: false,
      },
    ],
    name: "AuctionCanceled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenContract",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "auction",
        internalType: "struct ReserveAuctionFindersEth.Auction",
        type: "tuple",
        components: [
          { name: "seller", internalType: "address", type: "address" },
          { name: "reservePrice", internalType: "uint96", type: "uint96" },
          {
            name: "sellerFundsRecipient",
            internalType: "address",
            type: "address",
          },
          { name: "highestBid", internalType: "uint96", type: "uint96" },
          { name: "highestBidder", internalType: "address", type: "address" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "startTime", internalType: "uint48", type: "uint48" },
          { name: "finder", internalType: "address", type: "address" },
          { name: "firstBidTime", internalType: "uint80", type: "uint80" },
          { name: "findersFeeBps", internalType: "uint16", type: "uint16" },
        ],
        indexed: false,
      },
    ],
    name: "AuctionCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenContract",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "auction",
        internalType: "struct ReserveAuctionFindersEth.Auction",
        type: "tuple",
        components: [
          { name: "seller", internalType: "address", type: "address" },
          { name: "reservePrice", internalType: "uint96", type: "uint96" },
          {
            name: "sellerFundsRecipient",
            internalType: "address",
            type: "address",
          },
          { name: "highestBid", internalType: "uint96", type: "uint96" },
          { name: "highestBidder", internalType: "address", type: "address" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "startTime", internalType: "uint48", type: "uint48" },
          { name: "finder", internalType: "address", type: "address" },
          { name: "firstBidTime", internalType: "uint80", type: "uint80" },
          { name: "findersFeeBps", internalType: "uint16", type: "uint16" },
        ],
        indexed: false,
      },
    ],
    name: "AuctionEnded",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenContract",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "auction",
        internalType: "struct ReserveAuctionFindersEth.Auction",
        type: "tuple",
        components: [
          { name: "seller", internalType: "address", type: "address" },
          { name: "reservePrice", internalType: "uint96", type: "uint96" },
          {
            name: "sellerFundsRecipient",
            internalType: "address",
            type: "address",
          },
          { name: "highestBid", internalType: "uint96", type: "uint96" },
          { name: "highestBidder", internalType: "address", type: "address" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "startTime", internalType: "uint48", type: "uint48" },
          { name: "finder", internalType: "address", type: "address" },
          { name: "firstBidTime", internalType: "uint80", type: "uint80" },
          { name: "findersFeeBps", internalType: "uint16", type: "uint16" },
        ],
        indexed: false,
      },
    ],
    name: "AuctionReservePriceUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenContract",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "RoyaltyPayout",
  },
  {
    stateMutability: "payable",
    type: "function",
    inputs: [
      { name: "_tokenContract", internalType: "address", type: "address" },
      { name: "_tokenId", internalType: "uint256", type: "uint256" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
      { name: "_payoutCurrency", internalType: "address", type: "address" },
    ],
    name: "_handleRoyaltyEnginePayout",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "auctionForNFT",
    outputs: [
      { name: "seller", internalType: "address", type: "address" },
      { name: "reservePrice", internalType: "uint96", type: "uint96" },
      {
        name: "sellerFundsRecipient",
        internalType: "address",
        type: "address",
      },
      { name: "highestBid", internalType: "uint96", type: "uint96" },
      { name: "highestBidder", internalType: "address", type: "address" },
      { name: "duration", internalType: "uint48", type: "uint48" },
      { name: "startTime", internalType: "uint48", type: "uint48" },
      { name: "finder", internalType: "address", type: "address" },
      { name: "firstBidTime", internalType: "uint80", type: "uint80" },
      { name: "findersFeeBps", internalType: "uint16", type: "uint16" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_tokenContract", internalType: "address", type: "address" },
      { name: "_tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "cancelAuction",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_tokenContract", internalType: "address", type: "address" },
      { name: "_tokenId", internalType: "uint256", type: "uint256" },
      { name: "_duration", internalType: "uint256", type: "uint256" },
      { name: "_reservePrice", internalType: "uint256", type: "uint256" },
      {
        name: "_sellerFundsRecipient",
        internalType: "address",
        type: "address",
      },
      { name: "_startTime", internalType: "uint256", type: "uint256" },
      { name: "_findersFeeBps", internalType: "uint256", type: "uint256" },
    ],
    name: "createAuction",
    outputs: [],
  },
  {
    stateMutability: "payable",
    type: "function",
    inputs: [
      { name: "_tokenContract", internalType: "address", type: "address" },
      { name: "_tokenId", internalType: "uint256", type: "uint256" },
      { name: "_finder", internalType: "address", type: "address" },
    ],
    name: "createBid",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "erc721TransferHelper",
    outputs: [
      {
        name: "",
        internalType: "contract ERC721TransferHelper",
        type: "address",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "registrar",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_tokenContract", internalType: "address", type: "address" },
      { name: "_tokenId", internalType: "uint256", type: "uint256" },
      { name: "_reservePrice", internalType: "uint256", type: "uint256" },
    ],
    name: "setAuctionReservePrice",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_royaltyEngine", internalType: "address", type: "address" },
    ],
    name: "setRoyaltyEngineAddress",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_tokenContract", internalType: "address", type: "address" },
      { name: "_tokenId", internalType: "uint256", type: "uint256" },
    ],
    name: "settleAuction",
    outputs: [],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [{ name: "_interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
] as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export const reserveAuctionFindersEthAddress = {
  1: "0x9458E29713B98BF452ee9B2C099289f533A5F377",
  31337: "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
} as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export const reserveAuctionFindersEthConfig = {
  address: reserveAuctionFindersEthAddress,
  abi: reserveAuctionFindersEthABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EditionMinter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export const editionMinterABI = [
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "previousOwner", type: "address", indexed: true },
      { name: "newOwner", type: "address", indexed: true },
    ],
    name: "OwnershipTransferred",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "configurer", type: "address", indexed: true },
      { name: "nft_contract", type: "address", indexed: true },
      { name: "token_id", type: "uint256", indexed: false },
    ],
    name: "DropConfigured",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "buyer", type: "address", indexed: true },
      { name: "receiver", type: "address", indexed: true },
      { name: "nft_addr", type: "address", indexed: true },
      { name: "token_id", type: "uint256", indexed: false },
      { name: "amount", type: "uint256", indexed: false },
      { name: "price", type: "uint256", indexed: false },
      { name: "is_presale", type: "bool", indexed: false },
    ],
    name: "Purchase",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "closer", type: "address", indexed: true },
      { name: "nft_contract", type: "address", indexed: true },
      { name: "token_id", type: "uint256", indexed: false },
    ],
    name: "DropClosed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "phase_param", type: "uint256", indexed: false },
      { name: "param_updated", type: "uint256", indexed: false },
      { name: "value", type: "bytes32", indexed: false },
    ],
    name: "DropUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [{ name: "status", type: "bool", indexed: false }],
    name: "Paused",
  },
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [{ name: "_owner", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "_paused", type: "bool" }],
    name: "set_paused",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_nft_addr", type: "address" },
      { name: "_token_id", type: "uint256" },
      { name: "_supply", type: "uint256" },
      { name: "_decay_rate", type: "int256" },
      { name: "_allowance", type: "uint256" },
      { name: "_payout_receiver", type: "address" },
      { name: "_start_time", type: "uint256" },
      { name: "_presale_duration", type: "uint256" },
      { name: "_presale_cost", type: "uint256" },
      { name: "_presale_merkle_root", type: "bytes32" },
      { name: "_public_duration", type: "uint256" },
      { name: "_public_cost", type: "uint256" },
    ],
    name: "configure_drop",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_nft_addr", type: "address" },
      { name: "_token_id", type: "uint256" },
    ],
    name: "close_drop",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_nft_addr", type: "address" },
      { name: "_token_id", type: "uint256" },
      { name: "_phase", type: "uint256" },
      { name: "_param", type: "uint256" },
      { name: "_param_value", type: "bytes32" },
    ],
    name: "update_drop_param",
    outputs: [],
  },
  {
    stateMutability: "payable",
    type: "function",
    inputs: [
      { name: "_nft_addr", type: "address" },
      { name: "_token_id", type: "uint256" },
      { name: "_num_mint", type: "uint256" },
      { name: "_receiver", type: "address" },
      { name: "_proof", type: "bytes32[]" },
      { name: "_allowlist_allocation", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "_nft_addr", type: "address" },
      { name: "_token_id", type: "uint256" },
    ],
    name: "get_drop",
    outputs: [
      {
        name: "",
        type: "tuple",
        components: [
          { name: "supply", type: "uint256" },
          { name: "decay_rate", type: "int256" },
          { name: "allowance", type: "uint256" },
          { name: "payout_receiver", type: "address" },
          { name: "start_time", type: "uint256" },
          { name: "presale_duration", type: "uint256" },
          { name: "presale_cost", type: "uint256" },
          { name: "presale_merkle_root", type: "bytes32" },
          { name: "public_duration", type: "uint256" },
          { name: "public_cost", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "_nft_addr", type: "address" },
      { name: "_token_id", type: "uint256" },
      { name: "_user", type: "address" },
    ],
    name: "get_num_minted",
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "_nft_addr", type: "address" },
      { name: "_token_id", type: "uint256" },
    ],
    name: "get_drop_phase",
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "is_paused",
    outputs: [{ name: "", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", type: "address" }],
  },
] as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export const editionMinterAddress = {
  1: "0x454A3B647C7e9F4270175285c978dFb9D1f7Af15",
  31337: "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
} as const;

/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export const editionMinterConfig = {
  address: editionMinterAddress,
  abi: editionMinterABI,
} as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Core
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link reserveAuctionFindersEthABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export function getReserveAuctionFindersEth(
  config: Omit<GetContractArgs, "abi" | "address"> & {
    chainId?: keyof typeof reserveAuctionFindersEthAddress;
  }
) {
  return getContract({
    abi: reserveAuctionFindersEthABI,
    address:
      reserveAuctionFindersEthAddress[
        config.chainId as keyof typeof reserveAuctionFindersEthAddress
      ],
    ...config,
  });
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link reserveAuctionFindersEthABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export function readReserveAuctionFindersEth<
  TAbi extends readonly unknown[] = typeof reserveAuctionFindersEthABI,
  TFunctionName extends string = string
>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, "abi" | "address"> & {
    chainId?: keyof typeof reserveAuctionFindersEthAddress;
  }
) {
  return readContract({
    abi: reserveAuctionFindersEthABI,
    address:
      reserveAuctionFindersEthAddress[
        config.chainId as keyof typeof reserveAuctionFindersEthAddress
      ],
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>);
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link reserveAuctionFindersEthABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export function writeReserveAuctionFindersEth<
  TFunctionName extends string,
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof reserveAuctionFindersEthAddress
>(
  config:
    | (Omit<
        WriteContractPreparedArgs<
          typeof reserveAuctionFindersEthABI,
          TFunctionName
        >,
        "abi" | "address"
      > & {
        mode: TMode;
        chainId?: TMode extends "prepared"
          ? TChainId
          : keyof typeof reserveAuctionFindersEthAddress;
      })
    | (Omit<
        WriteContractUnpreparedArgs<
          typeof reserveAuctionFindersEthABI,
          TFunctionName
        >,
        "abi" | "address"
      > & {
        mode: TMode;
        chainId?: TMode extends "prepared"
          ? TChainId
          : keyof typeof reserveAuctionFindersEthAddress;
      })
) {
  return writeContract({
    abi: reserveAuctionFindersEthABI,
    address:
      reserveAuctionFindersEthAddress[
        config.chainId as keyof typeof reserveAuctionFindersEthAddress
      ],
    ...config,
  } as WriteContractArgs<typeof reserveAuctionFindersEthABI, TFunctionName>);
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link reserveAuctionFindersEthABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export function prepareWriteReserveAuctionFindersEth<
  TAbi extends readonly unknown[] = typeof reserveAuctionFindersEthABI,
  TFunctionName extends string = string
>(
  config: Omit<
    PrepareWriteContractConfig<TAbi, TFunctionName>,
    "abi" | "address"
  > & { chainId?: keyof typeof reserveAuctionFindersEthAddress }
) {
  return prepareWriteContract({
    abi: reserveAuctionFindersEthABI,
    address:
      reserveAuctionFindersEthAddress[
        config.chainId as keyof typeof reserveAuctionFindersEthAddress
      ],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>);
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link reserveAuctionFindersEthABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x9458E29713B98BF452ee9B2C099289f533A5F377)
 * -
 */
export function watchReserveAuctionFindersEthEvent<
  TAbi extends readonly unknown[] = typeof reserveAuctionFindersEthABI,
  TEventName extends string = string
>(
  config: Omit<
    WatchContractEventConfig<TAbi, TEventName>,
    "abi" | "address"
  > & { chainId?: keyof typeof reserveAuctionFindersEthAddress },
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent(
    {
      abi: reserveAuctionFindersEthABI,
      address:
        reserveAuctionFindersEthAddress[
          config.chainId as keyof typeof reserveAuctionFindersEthAddress
        ],
      ...config,
    } as WatchContractEventConfig<TAbi, TEventName>,
    callback
  );
}

/**
 * Wraps __{@link getContract}__ with `abi` set to __{@link editionMinterABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export function getEditionMinter(
  config: Omit<GetContractArgs, "abi" | "address"> & {
    chainId?: keyof typeof editionMinterAddress;
  }
) {
  return getContract({
    abi: editionMinterABI,
    address:
      editionMinterAddress[config.chainId as keyof typeof editionMinterAddress],
    ...config,
  });
}

/**
 * Wraps __{@link readContract}__ with `abi` set to __{@link editionMinterABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export function readEditionMinter<
  TAbi extends readonly unknown[] = typeof editionMinterABI,
  TFunctionName extends string = string
>(
  config: Omit<ReadContractConfig<TAbi, TFunctionName>, "abi" | "address"> & {
    chainId?: keyof typeof editionMinterAddress;
  }
) {
  return readContract({
    abi: editionMinterABI,
    address:
      editionMinterAddress[config.chainId as keyof typeof editionMinterAddress],
    ...config,
  } as unknown as ReadContractConfig<TAbi, TFunctionName>);
}

/**
 * Wraps __{@link writeContract}__ with `abi` set to __{@link editionMinterABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export function writeEditionMinter<
  TFunctionName extends string,
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof editionMinterAddress
>(
  config:
    | (Omit<
        WriteContractPreparedArgs<typeof editionMinterABI, TFunctionName>,
        "abi" | "address"
      > & {
        mode: TMode;
        chainId?: TMode extends "prepared"
          ? TChainId
          : keyof typeof editionMinterAddress;
      })
    | (Omit<
        WriteContractUnpreparedArgs<typeof editionMinterABI, TFunctionName>,
        "abi" | "address"
      > & {
        mode: TMode;
        chainId?: TMode extends "prepared"
          ? TChainId
          : keyof typeof editionMinterAddress;
      })
) {
  return writeContract({
    abi: editionMinterABI,
    address:
      editionMinterAddress[config.chainId as keyof typeof editionMinterAddress],
    ...config,
  } as WriteContractArgs<typeof editionMinterABI, TFunctionName>);
}

/**
 * Wraps __{@link prepareWriteContract}__ with `abi` set to __{@link editionMinterABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export function prepareWriteEditionMinter<
  TAbi extends readonly unknown[] = typeof editionMinterABI,
  TFunctionName extends string = string
>(
  config: Omit<
    PrepareWriteContractConfig<TAbi, TFunctionName>,
    "abi" | "address"
  > & { chainId?: keyof typeof editionMinterAddress }
) {
  return prepareWriteContract({
    abi: editionMinterABI,
    address:
      editionMinterAddress[config.chainId as keyof typeof editionMinterAddress],
    ...config,
  } as unknown as PrepareWriteContractConfig<TAbi, TFunctionName>);
}

/**
 * Wraps __{@link watchContractEvent}__ with `abi` set to __{@link editionMinterABI}__.
 *
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x454A3B647C7e9F4270175285c978dFb9D1f7Af15)
 * -
 */
export function watchEditionMinterEvent<
  TAbi extends readonly unknown[] = typeof editionMinterABI,
  TEventName extends string = string
>(
  config: Omit<
    WatchContractEventConfig<TAbi, TEventName>,
    "abi" | "address"
  > & { chainId?: keyof typeof editionMinterAddress },
  callback: WatchContractEventCallback<TAbi, TEventName>
) {
  return watchContractEvent(
    {
      abi: editionMinterABI,
      address:
        editionMinterAddress[
          config.chainId as keyof typeof editionMinterAddress
        ],
      ...config,
    } as WatchContractEventConfig<TAbi, TEventName>,
    callback
  );
}
